<!DOCTYPE html>
<html lang="es">
<head>
  <meta charset="UTF-8">
  <meta http-equiv="X-UA-Compatible" content="IE=edge">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <meta name="theme-color" content="#1e7bbf">
  <link rel="shortcut icon" href="../../../favicon-1.ico">
  <title>Configuración de PostCSS - CSS en español - Lenguaje CSS</title>
  <link rel="preload" href="../../../critical-1.css" as="style">
  <link rel="preload" href="../../../assets/fonts/blinker-vf-1.woff2" as="font" crossorigin="">
  <link rel="preload" href="../../../assets/fonts/scope-one-400-1.woff2" as="font" crossorigin="">
  <meta name="description" content="En este artículo puedes aprender a configurar correctamente PostCSS y aplicar los plugins que más te interesen para transformar tu código CSS.">
  <link rel="stylesheet" href="../../../critical-1.css">
  <link rel="stylesheet" href="../../../theme-1.css">
  <script type="module" src="../../../main-1.js"></script>
  <link rel="canonical" href="index.htm">
  <meta property="og:title" content="Configuración de PostCSS - CSS en español">
  <meta property="og:image" content="https://lenguajecss.com/postcss/large-summary.jpg">
  <meta property="og:type" content="article">
  <meta property="og:description" content="En este artículo puedes aprender a configurar correctamente PostCSS y aplicar los plugins que más te interesen para transformar tu código CSS.">
  <meta property="og:url" content="https://lenguajecss.com/postcss/introduccion/configuracion-postcss/">
  <meta property="twitter:url" content="https://lenguajecss.com/postcss/introduccion/configuracion-postcss/">
  <meta property="twitter:card" content="summary_large_image">
  <meta property="twitter:creator" content="@Manz">
  <meta property="twitter:title" content="Configuración de PostCSS - CSS en español">
  <meta property="twitter:description" content="En este artículo puedes aprender a configurar correctamente PostCSS y aplicar los plugins que más te interesen para transformar tu código CSS.">
  <meta property="twitter:image:src" content="https://lenguajecss.com/postcss/large-summary.jpg">
</head>
<body class="css post"><div class="page">
    <div class="sidebar">
      <div class="logo flex-center">
  <a href="../../../index.htm">
    <img width="42" height="42" src="../../../assets/logo-1.svg" alt="Logo">
    Lenguaje CSS
  </a>
  <div class="icons" style="--icon-size: 32px; --icon-side-padding: 0.15em">
    <a href="https://twitter.com/Manz" title="Twitter"><svg-icon type="social" name="twitter"></svg-icon></a>
    <a href="https://twitch.tv/manzdev" title="Twitch"><svg-icon type="social" name="twitch"></svg-icon></a>
    <a href="https://instagram.com/manz.dev" title="Instagram"><svg-icon type="social" name="instagram"></svg-icon></a>
    <a href="https://youtube.com/ManzDev?sub_confirmation=1" title="YouTube"><svg-icon type="social" name="youtube"></svg-icon></a>
    <a href="https://discord.manz.dev/" title="Servidor de Discord"><svg-icon type="social" name="discord"></svg-icon></a>
  </div>
  <span>Un sitio web de <a href="https://manz.dev/"><mark>Manz.dev</mark></a></span>
</div>

      <form class="search flex-center" action="https://www.google.com/search">
  <label><span>Buscar:</span> <input type="search" name="q" placeholder="Buscar un tema (ej: flex, grid...)" autocomplete="off"></label>
  <label><span>Sitio:</span> <input type="hidden" name="q" value="site:lenguajejs.com OR site:lenguajecss.com OR site:lenguajehtml.com OR site:terminaldelinux.com OR site:manz.dev"></label>
  <div class="search-results"></div>
</form>

      

<style>
  sidebar-link {
    --logo-image: url(../../logo.svg);
  }
</style>

<div class="toc"><sidebar-link title="Volver al índice" href="../../index.htm" back="" direct=""></sidebar-link><sidebar-section title="Introducción a PostCSS" href="../index.htm"><sidebar-link href="../que-es/index.htm" title="¿Qué es PostCSS?"></sidebar-link><sidebar-link href="index.htm" title="Configuración de PostCSS"></sidebar-link><sidebar-link href="../browserslist/index.htm" title="¿Qué es Browserslist?"></sidebar-link></sidebar-section><sidebar-section title="Plugins de PostCSS" href="../../plugins/index.htm"><sidebar-link href="../../plugins/autoprefixer/index.htm" title="Autoprefixer: Prefijos CSS"></sidebar-link><sidebar-link href="../../plugins/css-nesting/index.htm" title="CSS Nesting: CSS anidado"></sidebar-link><sidebar-link href="../../plugins/purgecss/index.htm" title="PurgeCSS: CSS no utilizado"></sidebar-link></sidebar-section></div>

      
    </div>
    <div class="contents">
      <header class="mega">
  <h1>Configuración de PostCSS</h1></header>

      <div class="content ">
  <div class="breadcrumbs">
  <a href="../../../index.htm">ATRÁS</a> <span>ᐳ</span> <a href="../../index.htm">postcss</a> <span>ᐳ</span> <a href="index.htm">Configuración de PostCSS</a>
</div>
<p>Una vez sabemos <a href="../que-es/index.htm">que es PostCSS</a> (<em>y que funciona a base de plugins</em>), podemos realiza una detallada <a href="https://www.npmjs.com/search?q=postcss">búsqueda de PostCSS en NPM</a> para encontrar paquetes que nos servirán para nuestros proyectos, pero que sin duda, se haría incómodo configurar y ejecutar desde una <strong>línea de comandos</strong> debido a la gran cantidad de configuración necesaria.</p>
<p>Es entonces cuando nos comienza a interesar crear un <strong>fichero de configuración</strong> donde guardar toda la información de como gestionar <strong>PostCSS</strong> en nuestro proyecto, que plugins utilizar, así como otros detalles relacionados.</p>
<h3 id="parámetros-de-postcss" tabindex="-1">Parámetros de PostCSS</h3>
<p>Antes de comenzar con el fichero de configuración, vamos a ver algunas de las opciones que tiene <strong>PostCSS</strong> en su línea de comandos, que también se podrán aplicar más adelante en el fichero de configuración:</p>
<table>
<thead>
<tr>
<th>Opción</th>
<th>Abrev.</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>--output</code> <badge-type class="string"></badge-type></td>
<td><code>-o</code></td>
<td>Indica el fichero de destino que se generará, habitualmente <code>index.css</code>.</td>
</tr>
<tr>
<td><code>--dir</code> <badge-type class="string"></badge-type></td>
<td><code>-d</code></td>
<td>Indica una carpeta de destino. Útil cuando quieres convertir varios archivos.</td>
</tr>
<tr>
<td><code>--map</code></td>
<td><code>-m</code></td>
<td>Indica un <strong>sourcemap</strong> (relación entre origen y destino), habitualmente <code>index.css.map</code>.</td>
</tr>
<tr>
<td><code>--no-map</code></td>
<td></td>
<td>Desactiva la generación de la última línea del CSS con el <strong>sourcemapping</strong>.</td>
</tr>
<tr>
<td><code>--verbose</code></td>
<td></td>
<td>Activa la modalidad de depuración (muestra todo lo que hace).</td>
</tr>
<tr>
<td><code>--watch</code></td>
<td></td>
<td>PostCSS se queda activo esperando cambios en ficheros, y procesando en ese caso.</td>
</tr>
<tr>
<td><code>--env</code> <badge-type class="string"></badge-type></td>
<td></td>
<td>Establece variables de entorno.</td>
</tr>
<tr>
<td><code>--use</code> <badge-type class="array"></badge-type></td>
<td></td>
<td>Usa los plugins de PostCSS indicados.</td>
</tr>
<tr>
<td><code>--ext</code> <badge-type class="string"></badge-type></td>
<td></td>
<td>Utiliza la extensión indicada en los ficheros de destino. Útil para usar con <code>-d</code>.</td>
</tr>
<tr>
<td><code>--config</code> <badge-type class="string"></badge-type></td>
<td></td>
<td>Establece la carpeta donde buscará los archivos de configuración. Por defecto, raíz.</td>
</tr>
</tbody>
</table>
<p>Uno de los parámetros más interesantes es <code>--watch</code>, que permite mantener <strong>PostCSS</strong> vigilando cambios en el fichero (<em>o carpeta</em>) indicado y cuando detecte que hay cambios (<em>escribimos en nuestro editor</em>), ejecuta <strong>PostCSS</strong> actualizando los cambios en el fichero destino generado.</p>
<h3 id="fichero-de-configuración" tabindex="-1">Fichero de configuración</h3>
<p><strong>PostCSS</strong> permite crear ficheros de configuración para obtener todos esos parámetros de dicho fichero y no tener que pasarselos a <code>postcss</code> desde la linea de comandos. Generalmente, estos ficheros tienen el nombre <code>.postcssrc</code> o <code>postcss.config.js</code>. En el caso de que exista alguno de los dos en la carpeta raíz del proyecto, <strong>PostCSS</strong> cargará la configuración que reside en ellos.</p>
<blockquote>
<p>Si queremos indicarle otra ruta (<em>en lugar de la carpeta raíz</em>) podemos utilizar el parámetro <code>postcss --config data</code>, que buscará un fichero de configuración en la carpeta <code>data</code>.</p>
</blockquote>
<p>Los <strong>ficheros de configuración</strong> suelen tener uno de los siguientes nombres:</p>
<table>
<thead>
<tr>
<th>Nombre del fichero</th>
<th>Formato</th>
<th>Descripción</th>
</tr>
</thead>
<tbody>
<tr>
<td><code>.postcssrc</code></td>
<td>JSON</td>
<td>Fichero oculto. No soporta comentarios ni código JS. Más sencillo.</td>
</tr>
<tr>
<td><code>postcss.config.js</code></td>
<td>Javascript</td>
<td>Soporta comentarios. Permite código JS. Más flexible.</td>
</tr>
</tbody>
</table>
<p>Por ejemplo, queremos crear un <strong>fichero de configuración</strong> que cargue dos plugin de <strong>PostCSS</strong>. En primer lugar, el plugin <a href="https://github.com/jonathantneal/postcss-nesting">postcss-nesting</a> del que hablamos en el artículo anterior, y en segundo lugar, otro plugin bastante popular llamado <a href="https://github.com/postcss/autoprefixer">autoprefixer</a>, que sirve para añadir automáticamente los prefijos CSS de navegadores.</p>
<p>Así pues, deberíamos crear un fichero <code>.postcssrc</code> (<em>JSON</em>) en la carpeta raíz del proyecto:</p>
<pre class="language-js"><code class="language-js"><span class="token punctuation">{</span><br>  <span class="token string-property property">"plugins"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token string-property property">"postcss-nesting"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span><br>    <span class="token string-property property">"autoprefixer"</span><span class="token operator">:</span> <span class="token boolean">true</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>Si en cambio preferimos crear su fichero de configuración equivalente en Javascript, lo nombramos como <code>postcss.config.js</code> (<em>Javascript</em>) y escribimos el código que tenemos a continuación, que se interpreta como código Javascript de <strong>NodeJS</strong> (<em>ambos son equivalentes</em>):</p>
<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><br>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token string-property property">"postcss-nesting"</span><span class="token operator">:</span> <span class="token boolean">true</span><span class="token punctuation">,</span>       <span class="token comment">/* Nesting CSS */</span><br>    <span class="token string-property property">"autoprefixer"</span><span class="token operator">:</span> <span class="token boolean">true</span>           <span class="token comment">/* CSS Vendor prefixes */</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<blockquote>
<p>Observa que en esta última modalidad debemos usar <code>module.exports</code>, que es el sistema de módulos legacy que utiliza Node, y en lugar de un JSON se trata de un objeto Javascript, donde a diferencia del anterior podemos utilizar comentarios o incluso lógica Javascript.</p>
</blockquote>
<p>El formato de configuración de <strong>PostCSS</strong>, es un formato JSON en el que la clave <code>plugins</code> contiene una lista de plugins de PostCSS, donde la clave es el nombre del paquete y el valor puede ser:</p>
<ul>
<li><badge-type class="boolean"></badge-type> a <code>true</code>, que significa que el plugin está activado.</li>
<li><badge-type class="boolean"></badge-type> a <code>false</code>, que significa que el plugin está desactivado.</li>
<li><badge-type class="object"></badge-type> con más elementos, que se usará como opciones del plugin en cuestión.</li>
</ul>
<p>Por ejemplo, observa el contenido de ejemplo de este <code>postcss.config.js</code>. En él, activamos el plugin <code>postcss-preset-env</code>, pero en lugar de aplicarle un booleano para activar o desactivarlo, le indicamos un <badge-type class="object"></badge-type> donde establecemos una configuración personalizada, que a su vez, <strong>PostCSS</strong> transmitirá al plugin para que tome los valores indicados:</p>
<pre class="language-js"><code class="language-js">module<span class="token punctuation">.</span>exports <span class="token operator">=</span> <span class="token punctuation">{</span><br>  <span class="token literal-property property">plugins</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>    <span class="token string-property property">"postcss-preset-env"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>      <span class="token string-property property">"stage"</span><span class="token operator">:</span> <span class="token number">3</span><span class="token punctuation">,</span><br>      <span class="token string-property property">"features"</span><span class="token operator">:</span> <span class="token punctuation">{</span><br>        <span class="token string-property property">"nesting-rules"</span><span class="token operator">:</span> <span class="token boolean">true</span><br>      <span class="token punctuation">}</span><br>    <span class="token punctuation">}</span><br>  <span class="token punctuation">}</span><br><span class="token punctuation">}</span></code></pre>
<p>Más adelante veremos como funciona este plugin en cuestión, pero lo importante es que quede claro la forma de indicar los parámetros, en este caso, enviando un parámetro <code>stage</code> con valor numérico <code>3</code> y un objeto <code>features</code> que tiene la caracaterística <code>nesting-rules</code> activada.</p>
<h3 id="ejecutando-postcss" tabindex="-1">Ejecutando PostCSS</h3>
<p>Una vez tengamos la configuración deseada guardada en nuestro <strong>fichero de configuración</strong>, por ejemplo, <code>postcss.config.js</code>, sólo nos quedaría ejecutar el comando <code>postcss</code>:</p>
<pre class="language-bash"><code class="language-bash">$ npx postcss --watch src/css/index.pcss -o dist/css/index.css</code></pre>
<p>En este ejemplo, busca automáticamente el fichero de configuración <code>postcss.config.js</code>, aplica los datos que tenemos en él, y luego obtiene los datos que le pasamos a <code>postcss</code> mediante la linea de comandos, donde:</p>
<ul>
<li>Con <code>--watch</code> indicamos que no termine la ejecución de <strong>PostCSS</strong>, sino que vigile cambios y vuelva a generar el <code>.css</code> final si los hay.</li>
<li>Con <code>src/css/index.pcss</code> indicamos la ruta y nombre del fichero <strong>PostCSS</strong> de origen.</li>
<li>Con <code>-o dist/css/index.css</code> indicamos la ruta y nombre del fichero <code>.css</code> de destino.</li>
</ul>
<blockquote>
<p>Ten en cuenta que habitualmente, para trabajar con <strong>PostCSS</strong> se suele utiliza una herramienta de automatización como <strong>Webpack</strong>, <strong>Parcel</strong>, <strong>Gulp</strong>, <strong>Rollup</strong> o similar, que permite gestionar el proyecto y organizarlo todo en conjunto. Aquí nos centramos en aprender sólo <strong>PostCSS</strong>.</p>
</blockquote>

    <nav class="prev-next"><a class="bt prev" href="../que-es/index.htm" title="¿Qué es PostCSS?">
    <span class="data">
      <span>¿Qué es PostCSS?</span>
      <small>Capítulo anterior</small>
    </span>
  </a><a class="bt next" href="../browserslist/index.htm" title="¿Qué es Browserslist?">
    <span class="icon">
      <svg-icon name="arrow-right"></svg-icon>
    </span>
    <span class="data">
      <span>¿Qué es Browserslist?</span>
      <small>Capítulo siguiente</small>
    </span>
  </a></nav>

    <script async="" src="../../../pagead/js/f-1.txt"></script>
<ins class="adsbygoogle" style="display:block; text-align:center; margin:auto; margin-top: 2em" data-ad-layout="in-article" data-ad-format="fluid" data-ad-client="ca-pub-0412426997270095" data-ad-slot="3027930890"></ins>
<script>
     (adsbygoogle = window.adsbygoogle || []).push({});
</script>
</div>

      <div class="related">

  <div class="author">
    <div class="author-wrapper">
      <img loading="lazy" class="circle" src="../../../assets/manz-1.webp" alt="Manz">
      <div>
        <p>Docente, divulgador informático y <a href="https://manz.dev/">streamer de código</a>. Amante de <strong>CSS</strong>, <strong>Javascript</strong>
          y de la plataforma web. Ha trabajado como profesor en la Universidad de La Laguna y es director del curso de
          Programación web FullStack y FrontEnd de EOI desde Tenerife. En sus ratos libres, busca GIF de gatos en Internet.</p>
        <p class="twitch-badge">
          <a href="https://twitch.tv/ManzDev">
            <svg class="twitch" viewbox="0 0 1024 1024">
              <path style="fill-opacity: 1; stroke: none; stroke-width: 1px; stroke-linecap: butt; stroke-linejoin: miter; stroke-opacity: 1;" d="m262.451 12.904-178.26 178.26v641.672h213.905v178.26l178.26-178.26h142.576L939.809 512V12.904H262.45zm35.645 71.287h570.383v392.164L725.904 618.932H583.287L458.514 743.705V618.932H298.096V84.192zM494.158 208.51v216.36h71.328V208.51h-71.328zm196 0v216.36h71.328V208.51h-71.328z"></path>
            </svg>
            Sígueme en Twitch
          </a>
        </p>
      </div>
    </div>
  </div>

  <div id="comentarios">
    <script async="" src="../../../count-1.js" id="dsq-count-scr"></script>
<script>
var disqus_config = function () {
  this.page.path = location.pathname.endsWith("/") ? location.pathname.substring(0, location.pathname.length - 1) : location.pathname;
  this.page.url = 'https://lenguajecss.com' + this.page.path;
  this.page.identifier = this.page.url;
};
document.addEventListener('DOMContentLoaded', function() {
  const coms = document.querySelector('#comentarios');
  a = coms.querySelector('#disqus_button');
  a.dataset.disqusIdentifier = 'https://lenguajecss.com' + (location.pathname.endsWith("/") ? location.pathname.substring(0, location.pathname.length - 1) : location.pathname);
  a.addEventListener('click', function() {
    const div = document.createElement('div');
    div.id = 'disqus_thread';
    coms.appendChild(div);
    const d = document, s = d.createElement('script');
    s.src = '//lenguajecss.disqus.com/embed.js';
    s.setAttribute('data-timestamp', +new Date());
    (d.head || d.body).appendChild(s);
    this.remove();
  });
});
</script>

    <a class="disqus-comment-count" id="disqus_button" href="#disqus_thread" data-disqus-identifier="https://lenguajecss.com/postcss/introduccion/configuracion-postcss/">Leer comentarios</a>
    <a class="discord" href="https://discord.manz.dev/">¡Accede a Discord y cuéntanos!</a>
  </div>

</div>

    </div>
    <div class="aside">
      <div class="aside">

  <div class="aside-top">
    <a href="https://manz.dev/digitalocean" title="Empieza en DigitalOcean con 100$">
      <img width="240" height="120" src="../../../assets/digital-ocean-1.png" alt="DigitalOcean">
    </a>
  </div><div class="video-related">
  <div class="table">Hablo de esto en...</div>
  <a href="https://youtu.be/VWtvKrYGYuo&t=6525"><img width="220" height="124" src="../../../vi/VWtvKrYGYuo/mqdefault.jpg" alt="Configuración de PostCSS"></a>
</div><script type="module">
  const ANCHOR_ICON = /* svg */`
    <svg class="anchor" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 205 205" width="36" height="36">
      <path d="m140 129 16 16s-20 30-42 30V71c14-5 25-18 25-34 0-20-17-36-37-36-21 0-38 16-38 36 0 15 11 29 25
              34v104c-26-2-42-27-42-27l18-18-65-9 10 63 17-17c15 12 32 37 73 37 51-1 63-29 76-40l19 19 10-64-65
              10zM83 36c0-10 8-18 19-18s19 8 19 18c0 11-9 19-19 19s-19-8-19-19z"/>
    </svg>`;
  // Add inner links to sidebar menu
  export const addInnerLinks = () => {
    const summary = document.querySelector(".aside .summary .links");
    const headers = Array.from(document.querySelectorAll(".content h3, .content h4"));
    const tocLinks = [];
    headers.forEach((e) => {
      const link = `${location.origin}${location.pathname}#${e.id}`;
      e.innerHTML = `<a class="permalink" href="${link}">${e.textContent} ${ANCHOR_ICON}</a>`;
      const headerType = e.nodeName.toLowerCase();
      const textContent = headerType === "h4" ? e.textContent.replace("La propiedad ", "").replace("La función ", "") : e.textContent;
      tocLinks.push(`<a class="${headerType}" href="#${e.id}">${textContent}</a>`);
    });
    summary.insertAdjacentHTML("beforeEnd", tocLinks.join("\n"));
  };

  addInnerLinks();
</script>

<div class="summary">
  <div class="table">Tabla de contenidos</div>
  <div class="links"></div>
</div>
</div>

    </div>
  </div><footer class="main">
  <div class="square">
    <a href="../../../index.htm"><h2>Lenguaje CSS</h2></a>
    <div class="icons">
      <a href="https://twitter.com/Manz" title="Twitter"><svg-icon type="social" name="twitter"></svg-icon></a>
      <a href="https://twitch.tv/manzdev" title="Twitch"><svg-icon type="social" name="twitch"></svg-icon></a>
      <a href="https://instagram.com/manz.dev" title="Instagram"><svg-icon type="social" name="instagram"></svg-icon></a>
      <a href="https://youtube.com/ManzDev?sub_confirmation=1" title="YouTube"><svg-icon type="social" name="youtube"></svg-icon></a>
      <a href="https://discord.manz.dev/" title="Servidor de Discord"><svg-icon type="social" name="discord"></svg-icon></a>
      <a href="https://github.com/ManzDev" title="GitHub"><svg-icon type="social" name="github"></svg-icon></a>
      <a href="https://codepen.io/Manz" title="Codepen"><svg-icon type="social" name="codepen"></svg-icon></a>
      <a href="https://www.linkedin.com/in/joseromanhdez/" title="Linkedin"><svg-icon type="social" name="linkedin"></svg-icon></a>
    </div>
    <p>Documentación sobre CSS y las mejores herramientas y recursos para aprender a utilizar el lenguaje de estilos CSS (Hojas de estilo).</p>
    <p id="footer">Creado y mantenido por <a href="https://twitter.com/Manz">@Manz</a> con <span title="<3">❤</span></p></div>
</footer>

<script>
window.ga=window.ga||function(){(ga.q=ga.q||[]).push(arguments)};ga.l=+new Date;
ga('create', 'UA-136544-3', 'auto');
ga('send', 'pageview');
</script>
<script async="" src='../../../analytics-1.js'></script>


</body>
</html>
